// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package home_html

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/enricomilli/portfolio/site/assets"

func Page() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Enrico's Portfolio</title><link rel=\"stylesheet\" href=\"/static/css/styles.css\"><script type=\"module\" defer src=\"https://cdn.jsdelivr.net/npm/@sudodevnull/datastar\"></script><script src=\"https://unpkg.com/@material-tailwind/html@2.3.2/scripts/ripple.js\"></script><script src=\"https://unpkg.com/@material-tailwind/html@2.3.2/scripts/collapse.js\"></script></head><body><div id=\"main\" class=\"h-screen w-screen p-10\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Accordion().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"mx-auto\"><div>Random number from server:</div><div data-on-load=\"$$get(&#39;/random-number&#39;)\" id=\"random-number\"></div><div class=\"flex flex-row gap-2 flex-nowrap items-center\"><button class=\"bg-red-400 p-2\" data-on-click=\"$$get(&#39;/random-number&#39;)\" data-fetch-indicator=\"(&#39;#random-number-loader&#39;)\" data-bind-disabled=\"$$isFetching(&#39;#random-number-loader&#39;)\"><div id=\"normal-button-text\">Get new random number</div></button><div id=\"random-number-loader\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = assets.Spinner("20").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div><button data-ripple-light=\"true\" class=\"rounded-md bg-slate-800 py-2 px-4 border border-transparent text-center text-sm text-white transition-all shadow-md hover:shadow-lg focus:bg-slate-700 focus:shadow-none active:bg-slate-700 hover:bg-slate-700 active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none ml-2\" type=\"button\">Ripple Effect On</button></div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func Accordion() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!-- Accordion Item 1 --><div class=\"border-b border-slate-200\"><button onclick=\"toggleAccordion(1)\" class=\"w-full flex justify-between items-center py-5 text-slate-800\"><span>What is Material Tailwind?</span> <span id=\"icon-1\" class=\"text-slate-800 transition-transform duration-300\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"w-4 h-4\"><path d=\"M8.75 3.75a.75.75 0 0 0-1.5 0v3.5h-3.5a.75.75 0 0 0 0 1.5h3.5v3.5a.75.75 0 0 0 1.5 0v-3.5h3.5a.75.75 0 0 0 0-1.5h-3.5v-3.5Z\"></path></svg></span></button><div id=\"content-1\" class=\"max-h-0 overflow-hidden transition-all duration-300 ease-in-out\"><div class=\"pb-5 text-sm text-slate-500\">Material Tailwind is a framework that enhances Tailwind CSS with additional styles and components.</div></div></div><!-- Accordion Item 2 --><div class=\"border-b border-slate-200\"><button onclick=\"toggleAccordion(2)\" class=\"w-full flex justify-between items-center py-5 text-slate-800\"><span>How to use Material Tailwind?</span> <span id=\"icon-2\" class=\"text-slate-800 transition-transform duration-300\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"w-4 h-4\"><path d=\"M8.75 3.75a.75.75 0 0 0-1.5 0v3.5h-3.5a.75.75 0 0 0 0 1.5h3.5v3.5a.75.75 0 0 0 1.5 0v-3.5h3.5a.75.75 0 0 0 0-1.5h-3.5v-3.5Z\"></path></svg></span></button><div id=\"content-2\" class=\"max-h-0 overflow-hidden transition-all duration-300 ease-in-out\"><div class=\"pb-5 text-sm text-slate-500\">You can use Material Tailwind by importing its components into your Tailwind CSS project.</div></div></div><!-- Accordion Item 3 --><div class=\"border-b border-slate-200\"><button onclick=\"toggleAccordion(3)\" class=\"w-full flex justify-between items-center py-5 text-slate-800\"><span>What can I do with Material Tailwind?</span> <span id=\"icon-3\" class=\"text-slate-800 transition-transform duration-300\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"w-4 h-4\"><path d=\"M8.75 3.75a.75.75 0 0 0-1.5 0v3.5h-3.5a.75.75 0 0 0 0 1.5h3.5v3.5a.75.75 0 0 0 1.5 0v-3.5h3.5a.75.75 0 0 0 0-1.5h-3.5v-3.5Z\"></path></svg></span></button><div id=\"content-3\" class=\"max-h-0 overflow-hidden transition-all duration-300 ease-in-out\"><div class=\"pb-5 text-sm text-slate-500\">Material Tailwind allows you to quickly build modern, responsive websites with a focus on design.</div></div></div><script>\n  function toggleAccordion(index) {\n    const content = document.getElementById(`content-${index}`);\n    const icon = document.getElementById(`icon-${index}`);\n \n    // SVG for Minus icon\n    const minusSVG = `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"w-4 h-4\">\n        <path d=\"M3.75 7.25a.75.75 0 0 0 0 1.5h8.5a.75.75 0 0 0 0-1.5h-8.5Z\" />\n      </svg>\n    `;\n \n    // SVG for Plus icon\n    const plusSVG = `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"w-4 h-4\">\n        <path d=\"M8.75 3.75a.75.75 0 0 0-1.5 0v3.5h-3.5a.75.75 0 0 0 0 1.5h3.5v3.5a.75.75 0 0 0 1.5 0v-3.5h3.5a.75.75 0 0 0 0-1.5h-3.5v-3.5Z\" />\n      </svg>\n    `;\n \n    // Toggle the content's max-height for smooth opening and closing\n    if (content.style.maxHeight && content.style.maxHeight !== '0px') {\n      content.style.maxHeight = '0';\n      icon.innerHTML = plusSVG;\n    } else {\n      content.style.maxHeight = content.scrollHeight + 'px';\n      icon.innerHTML = minusSVG;\n    }\n  }\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
